1、此项目用于基于spring mybatis自动根据实体类更新表结构，包括自动删除表、删除字段、修改字段，增加字段
2、也可以实现了对tkmapper的支持

使用方法
1、mybatis设置
{code:xml}
<settings>
                <!--需开启驼峰下划线自动转换 -->
		{color:#14892c}<setting name="mapUnderscoreToCamelCase" value="true" />{color}
                <!--控制台打印sql,便于调试 -->
		 <setting name="logImpl" value="STDOUT_LOGGING" />  
</settings>
{code}
2、SqlSessionFactory配置
xml方式

{code:xml}
<!-- 配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 扫描model包，使用别名 -->
		<property name="typeAliasesPackage" value="com.xxxx.xxxx.*.model,{color:#14892c}com.binz.tools.com.binz.tools.autoupdatetable.model{color}" />
		<!-- 扫描sql配置文件：mapper接口需要的xml文件 -->
		<property name="mapperLocations">
			<list>
				<value>{color:#14892c}classpath*:mapper/*.xml{color}</value>
				<value>classpath*:mapper/*/*.xml</value>
			</list>
		</property>
		<!-- mybatis分页插件 -->
		<property name="configLocation" value="classpath:mybatis-settings.xml" />
	</bean>
{code}

注解方式

{code:java}
@Bean("sqlSessionFactoryBean")
	public SqlSessionFactory sqlSessionFactoryBean(DataSource dataSource) throws Exception {

		SqlSessionFactoryBean sqlSessionFactoryBean = new SqlSessionFactoryBean();
		sqlSessionFactoryBean.setDataSource(dataSource);
		PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();
		sqlSessionFactoryBean.setConfigLocation(resolver.getResource("classpath:mybatis-setting.xml"));
	{color:#14892c}	Resource[] resources = resolver.getResources("classpath*:mapper/*Mapper.xml");
		sqlSessionFactoryBean.setMapperLocations(resources);{color}
		sqlSessionFactoryBean.setTypeHandlersPackage("com.xxx.xxx.*.model,{color:#14892c}com.binz.tools.com.binz.tools.autoupdatetable.model{color}");
		return sqlSessionFactoryBean.getObject();
	}
{code}

2、MapperScannerConfigurer配置
 xml方式


{code:xml}
<!-- mapper接口扫描 -->
	<bean class="com.binz.tools.com.binz.tools.autoupdatetable.entrance.AutoTableTKMapperScannerConfigurer">
		<property name="basePackage" value="com.xxxx.xxxx.*.mapper" />
		<property name="properties">
			<value>
				mappers=tk.mybatis.mapper.common.Mapper,tk.mybatis.mapper.common.special.InsertListMapper
			</value>
		</property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		
		<!--需要更新表结构的包路径 -->
		{color:#14892c}<property name="packs" value="com.xxx.xxx.test.model"/>{color}
                <!-- 可选参数  create(所有表删除重新创建)、update(更新表)、none(不做操作) -->
		{color:#14892c}<property name="tableAuto" value="update"/>{color}
	</bean>
{code}


注解方式



{code:java}
@Bean
	public MapperScannerConfigurer getMapperScannerConfigurer() throws Exception {
		AutoTableTKMapperScannerConfigurer autoTableTKMapperScannerConfigurer = new AutoTableTKMapperScannerConfigurer();
		autoTableTKMapperScannerConfigurer.setBasePackage("com.xxx.xxx.*.mapper");
		autoTableTKMapperScannerConfigurer.setSqlSessionFactoryBeanName("sqlSessionFactoryBean");
		Properties properties = new Properties();
		properties.setProperty("mappers", "tk.mybatis.mapper.common.Mapper,tk.mybatis.mapper.common.special.InsertListMapper");
		autoTableTKMapperScannerConfigurer.setProperties(properties);

		{color:#14892c}autoTableTKMapperScannerConfigurer.setPacks("com.xxx.xxx.test.model");
		autoTableTKMapperScannerConfigurer.setTableAuto("update");{color}
		return autoTableTKMapperScannerConfigurer;
	}

{code}

3、model配置方式

{code:java}
import org.apache.ibatis.type.JdbcType;

import com.binz.tools.com.binz.tools.autoupdatetable.common.ColumnType;
@Table(name = "t_test")
public class Test{

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "test_id",nullable = false,unique = false,length = 11,columnDefinition = "主键")
	@ColumnType(jdbcType = JdbcType.INTEGER)
	private Integer id;

	@Column(name = "test_name",nullable = true,unique = false,length = 64,columnDefinition = "注释",table="默认值")
	@ColumnType(jdbcType = JdbcType.VARCHAR)
	private String name;

}
{code}
附带自动生成java model 和sql  http://47.98.124.10:8088/love-web//html/java/java-model-generate.html

4、注意事项
    a、该项目根据 mybatis-enhance-actable-0.0.1 开源项目的思路改编而来
    b、该项目会自动删除更新表结构，根据实际情况使用


<dependency>
	<groupId>com.github.gonglb.tools</groupId>
	<artifactId>com.github.gonglb.tools.autoupdatetable</artifactId>
	<version>0.0.1</version>
</dependency>
